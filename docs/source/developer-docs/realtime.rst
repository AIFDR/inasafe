
InaSAFE Realtime
================

InaSAFE Realtime is a component of the InaSAFE project designed for deployment
on a server and creation of Impact Maps a short interval after an event occurs.

The original prototype of the realtime system was implemented by Ole Nielsen
(AusAID). The subsequent port of the realtime system to InaSAFE was implemented
by Tim Sutton (Linfiniti Consulting CC., funded by The World Bank and the
AIFDR).

Currently the realtime system supports Earthquake fatality impact assessments,
though in future we invisage additional support for other disaster types being
facilited.

Architecture
------------

InaSAFE Realtime is implemented by three main python modules:

* ftp_client - A generic tool to fetch directory listings and
    files from a remote server.
* shake_data - A mostly generic tool to fetch shake files from
    an ftp server. There is an expectation that the server layout
    follows a simple flat structure where files are named
    after the shake event and are in the format of shake data as
    provided by the USGS (XXXXXX TODO fact check XXXX).
    :samp:`ftp://118.97.83.243/20110413170148.inp.zip`
* shake_event - A rather monolithic module that 'knows' how to
    fetch, unpack, process and generate a report for a quake event.
    The module logic is based on the standard shake data packaging
    format supplied by the USGS. We have restricted out implementation
    to require only the :file:`grid.xml` file contained in the inp.zip
    file in the downloaded zip file.

InaSAFE has strong dependencies on QGIS (http://qgis.org) which is
used for much of the data processing and reporting functionality.

One of these dependencies is a template QGIS project and a map
composition template. We have designed the realtime reporting engine
to allow end users to customise the map report to their needs with little
or no programming. The primary way to achieve this is by opening the custom
template :file:`realtime/fixtures/realtime-template.qpt` in QGIS and modifying
its contents. You could also build a new template from scratch provided the
item IDs listed in the section that follows are used.

Installation
------------

To run the realtime component of InaSAFE, you need to have QGIS 2.0 and
the QGIS 2.0 python bindings installed. In addition the :samp:`pytz` module
is needed::

    sudo apt-get install python-tz

You also need to have the standard datasets needed for the cartography:

*

QGIS Map Template Elements
--------------------------

This section describes the various elements that comprise the standard map
template, and which you can modify directly in the template.

* **logo-left** - the logo element at the top left corner of the map layout.
* **main-title** - the main title at the top of the page.
* **right-logo** - the logo element at the top right corner of the map layout.
* **intensity-date** - the date and intensity of the event. By default this
    label contains the following replacement tokens: :samp:`M[mmi] [date]
    [time]`
* **position-depth** - the position (lon, lat) and depth of the event. By
    default this label contains the following replacement tokens:
    :samp:`[longitude-name] [longitude-value] [latitude-name] [latitude-value]
    [depth-name] [depth-value] [depth-unit]`
* **location-description** - the postion of the event described relative to
    the nearest major populated place. By default this label contains the
    following replacement tokens: :samp:`[located-label] [distance]
    [distance-unit], [bearing-degrees] [bearing-compass] [direction-relation]
    [place-name]`
* **elapsed-time** - the time elapsed between the event and when this report
    was generated. By default this label contains the following replacement
    tokens: :samp:`[elapsed-time-label] [elapsed-time]`
* **fatalities-table** - a table generated by ShakeEvent which will list the
    number of modelled fatalities in each of the MMI bands.
* **main-map** - primary map used to display the event and neighbouring towns.
    Developers can set a minimum number of neighbouring towns to display using
    the ShakeEvent api.
* **scalebar** - the scalebar which reflects the scale of the main map.
* **affected-cities** - a table generated by ShakeEvent which will list the
    closes N cities (configurable using the ShakeEvent api) listed in order of
    shake intensity then number of people likely to be affected.
* **overview-map** - a map overview showing the locality of the event.
* **legend** - a map legend, by default configured to show only the layer for
    the population layer.
* **disclaimer** - A block of text for displaying caveats, cautionary notes,
    interpretive information and so on.
* **credits** - A block of text for displaying credits on the map output.


Replacable Keywords
-------------------

This section describes tokenised keywords that are passed to the map template.
To insert any of these keywords into the map template, simply enclose the
key in [] (e.g. [place-name]) and it will be replaced by the text value (e.g.
Tondano).


* 'place-name': 'Tondano',
* 'depth-name': PyQt4.QtCore.QString(u'Depth'),
* 'location-info': u'M 5.0 26-7-2012 2:15:35 Latitude: 0\xb012\'36.00"S Longitude: 124\xb027\'0.00"E Depth: 11.0km Located 2.50km SSW of Tondano',
* 'depth-unit': PyQt4.QtCore.QString(u'km'),
* 'bearing-compass': 'SSW',
* 'distance-unit': PyQt4.QtCore.QString(u'km'),
* 'mmi': '5.0',
* 'longitude-name': PyQt4.QtCore.QString(u'Longitude'),
* 'date': '26-7-2012',
* 'time': '2:15:35',
* 'formatted-date-time: '26-Jul-12 02:15:35',
* 'located-label': PyQt4.QtCore.QString(u'Located'),
* 'bearing-degrees': '-163.055923462',
* 'distance': '2.50',
* 'direction-relation': PyQt4.QtCore.QString(u'of'),
* 'latitude-name': PyQt4.QtCore.QString(u'Latitude'),
* 'latitude-value': u'0\xb012\'36.00"S',
* 'longitude-value': u'124\xb027\'0.00"E',
* 'depth-value': '11.0',
* 'version': PyQt4.QtCore.QString(u'Version: 1.0.1'),,
* 'bearing-text': PyQt4.QtCore.QString(u'bearing'),
* 'elapsed-time-name': PyQt4.QtCore.QString(u'Elapsed time')
* 'elapsed-time': '26-Jul-12 02:15:35'

The template is provided as :file:`realtime/fixtures/realtime-template.qgs`
and can be modified by opening the template using the QGIS map composer,
making your changes and then overwriting the template. You should take care
to test your template changes before deploying them to a live server, and
after deploying them to a live server.

QGIS Realtime Project
---------------------

The cartography provided in the realtime maps is loaded from the
:file:`realtime/fixtures/realtime.qgs` QGIS project file. You can open this
file using QGIS, change the layers and their symbology, and your changes
will be reflected in the generated realtime shake report.

There are however some caveats to this:

* The overview map has locked layers
* The main map should always have a population layer with grayscale legend
  matching that provided in the original. If you do remove the population layer
  you should also remove or update the population layer legend.

