services:
    - docker

env:
  matrix:
    - QGIS_VERSION_TAG=release-2_8
    - QGIS_VERSION_TAG=release-2_14

language: python

cache:
  directories:
    - $HOME/.cache/pip

python:
  - "2.7"

virtualenv:
  system_site_packages: true

branches:
  only:
    - master
    - develop
    - experimental

addons:
  apt:
    packages:
      - git
      - python-software-properties

before_install:
  #- sudo apt-get -qq -y update
  #- docker pull elpaso/qgis-testing-environment:latest
  #- docker pull elpaso/qgis-testing-environment:release-2_8
  #- docker pull elpaso/qgis-testing-environment:release-2_14
  - docker pull elpaso/qgis-testing-environment:${QGIS_VERSION_TAG}
  - docker tag elpaso/qgis-testing-environment:${QGIS_VERSION_TAG} qgis-testing-environment

install:
#  - sudo apt-get install -y software-properties-common
#  - sudo add-apt-repository http://qgis.org/debian-ltr  # for QGIS LTR
#  - sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable  # for QGIS
#  - sudo apt-get update
#  - sudo apt-get install -y --force-yes qgis python-qgis pyflakes python-scientific
#  - pip install coverage
#  - pip install nosexcover
#  - pip install nose
#  - pip install beautifulsoup
  - pip install --upgrade pip
#  - pip install --upgrade pep8
#  - pip install --upgrade pylint
#  - pip install scrutinizer-ocular
  - echo "Checking out test data at" `date`
  - make testdata
  - docker run -d --name qgis-testing-environment -v ${TRAVIS_BUILD_DIR}_data:/inasafe_data -v ${TRAVIS_BUILD_DIR}:/tests_directory -e DISPLAY=:99 elpaso/qgis-testing-environment:release-2_14
  - sleep 10
  # Setup qgis and enable the plugin
  - docker exec -it qgis-testing-environment sh -c "qgis_setup.sh inasafe"
  # If needd additional steps (for example make or paver setup, place it here)
  # Link the plugin to the tests_directory
  # TEMPORARY HACK
  - docker exec -it qgis-testing-environment sh -c "cp /tests_directory/qgis_testrunner.sh /usr/bin/qgis_testrunner.sh"
  - docker exec -it qgis-testing-environment sh -c "chmod 777 /usr/bin/qgis_testrunner.sh"
  - docker exec -it qgis-testing-environment sh -c "ln -s /tests_directory /root/.qgis2/python/plugins/inasafe"

script:
  - docker exec -it qgis-testing-environment sh -c "qgis_testrunner.sh test_suite.run"
  #- make pep8
  #- xvfb-run --server-args="-screen 0, 1024x768x24" nosetests -A 'not slow' -v --with-id --with-xcoverage --with-xunit --verbose --cover-package=safe safe
