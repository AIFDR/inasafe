# coding=utf-8
"""Help text for options dialog."""

from safe.utilities.i18n import tr
from safe import messaging as m
from safe.messaging import styles

INFO_STYLE = styles.INFO_STYLE

__author__ = 'ismailsunni'


def options_help():
    """Help message for options dialog.

    ..versionadded:: 3.2.1

    :returns: A message object containing helpful information.
    :rtype: messaging.message.Message
    """

    message = m.Message()
    message.add(m.Brand())
    message.add(heading())
    message.add(content())
    return message


def heading():
    """Helper method that returns just the header.

    This method was added so that the text could be resused in the
    other contexts.

    ..versionadded:: 3.2.2

    :returns: A heading object.
    :rtype: safe.messaging.heading.Heading
    """
    message = m.Heading(tr('InaSAFE options help'), **INFO_STYLE)
    return message


def content():
    """Helper method that returns just the content.

    This method was added so that the text could be resused in the
    dock_help module.

    ..versionadded:: 3.2.2

    :returns: A message object without brand element.
    :rtype: safe.messaging.message.Message
    """
    message = m.Message()
    message.add(tr(
        'The InaSAFE options dialog is used to control various aspects of '
        'InaSAFE analysis and reporting environment. Here are brief '
        'descriptions of all the options available, grouped by the tab '
        'page on which they occur.'
    ))

    header = m.Heading(tr('Basic options tab'), **INFO_STYLE)
    message.add(header)

    message.add(m.Paragraph(tr(
        'The basic options tab provides several general settings:'
    )))

    bullets = m.BulletedList()
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Show organisation logo in InaSAFE dock')),
        tr(
            ' - When this option is enabled, a logo will be displayed at the '
            'bottom of the InaSAFE dock widget. By default the logo used '
            'is the InaSAFE supporters logo, but you can alter this by '
            'setting the \'Use custom organisation logo\' option in '
            'the template options tab (see below).')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Show only visible layers in the InaSAFE dock')),
        tr(
            ' - When this option is enabled layers that are not visible '
            'in the QGIS layers panel will not be shown in the hazard, '
            'exposure and aggregation combo boxes in the dock area.')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Set QGIS layer name from title in keywords')),
        tr(' - If this option is enabled, the InaSAFE keywords title '
           'attribute will be used for the layer name in the QGIS Layers list'
           'when adding a layer.')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Zoom to impact layer on scenario estimate completion')),
        tr(' - When this option is enabled, the map view extents will '
           'be updated to match the extents of the generated impact layer '
           'once the analysis completes.')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Hide exposure on scenario estimate completion')),
        tr(' - Use this option if you prefer to not show the exposure '
           'layer as an underlay behind the generated impact layer.')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'When clipping to analysis extents, also clip features')),
        tr(' - This option only applies in cases where hazard or exposure '
           'layers are vector layers. In these cases, any feature (line or '
           'polygon) that extends beyond the analysis extents will first '
           'be clipped so that it is coincident with the analysis extent. '
           'Note that enabling this option may have some unwanted side '
           'effects. For example, if you have an area attribute, that '
           'attribute may no longer match the actual clipped polygon area. ')))
    bullets.add(m.Text(
        m.ImportantText(tr(
            'Show intermediate layers generated by post processing')),
        tr(' - When enabled, the working layer used for doing by-area '
           'breakdowns of impact results will be added to the current QGIS'
           'project. You can generally leave this option disabled. ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    message.add(bullets)


    header = m.Heading(tr(''), **INFO_STYLE)
    message.add(header)

    message.add(m.Paragraph(tr(
        ''
    )))

    bullets = m.BulletedList()
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    message.add(bullets)


    header = m.Heading(tr(''), **INFO_STYLE)
    message.add(header)

    message.add(m.Paragraph(tr(
        ''
    )))

    bullets = m.BulletedList()
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    message.add(bullets)

    header = m.Heading(tr(''), **INFO_STYLE)
    message.add(header)

    message.add(m.Paragraph(tr(
        ''
    )))

    bullets = m.BulletedList()
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    bullets.add(m.Text(
        m.ImportantText(tr('')),
        tr(' - ')))
    message.add(bullets)

    return message
